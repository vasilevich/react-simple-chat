{"version":3,"file":"react-simple-chat.cjs.production.min.js","sources":["../src/components/header/Header.tsx","../src/components/bubble/Bubble.tsx","../src/components/timestamp/Timestamp.tsx","../src/components/avatar/Avatar.tsx","../src/components/typing_indicator/TypingIndicator.tsx","../src/components/body/Body.tsx","../src/components/input/Input.tsx","../src/components/widget/Widget.tsx","../src/components/chat/Chat.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Props {\n    title?: string;\n    minimize: () => void;\n    headerAvatar?: string;\n    headerStyle?: object;\n    titleColor?: string;\n    minimizeIcon?: string;\n}\n\nconst defaultMinimizeIcon = 'data:image/png;base64, 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';\n\nconst Header: React.FC<Props> = ({ title, minimize, headerAvatar, headerStyle, titleColor, minimizeIcon }) => {\n    return (\n        <header className=\"chat-header\" style={headerStyle}>\n            <div className=\"d-flex align-items-center\">\n                {headerAvatar && <div className=\"chat-header__avatar\">\n                    <img src={headerAvatar} alt=\"avatar\" />\n                </div>}\n                <div className=\"chat-header__title\" style={{ color: titleColor }}>{title ? title : 'Chat Demo'}</div>\n            </div>\n            <img src={minimizeIcon ? minimizeIcon : defaultMinimizeIcon} alt=\"minimize\" className=\"chat-header__minimize\" onClick={minimize} />\n        </header>\n    );\n}\nexport default Header;","import React from 'react';\nimport { Message } from '../chat/Chat';\n\nexport type Position = 'left' | 'right';\n\ninterface Props {\n    message: Message;\n    position: Position;\n    style?: object;\n}\n\nconst Bubble: React.FC<Props> = ({ message, position, style }) => {\n    return (\n        <div className={position === 'left' ? 'chat-bubble__wrapper chat-bubble--left' : 'chat-bubble__wrapper chat-bubble--right'}>\n            <div className=\"chat-bubble__content\" style={style}>{message.text}</div>\n        </div>\n    );\n}\nexport default Bubble;","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\ninterface Props {\n    date: string;\n    locale?: string;\n    style?: object;\n}\n\nconst Timestamp: React.FC<Props> = ({ date, style }) => {\n    return (\n        <div className=\"chat-timestamp\" style={style}>\n            <Moment format=\"dd. o HH:mm\">{moment(date)}</Moment>\n        </div>\n    );\n}\nexport default Timestamp;","import React from 'react';\n\ninterface Props {\n    source: string;\n}\n\nconst Avatar: React.FC<Props> = ({ source }) => {\n    return (\n        <div className=\"chat-message__avatar\">\n            <img src={source} alt=\"avatar\" />\n        </div>\n    );\n}\nexport default Avatar;","import React from 'react';\n\nconst TypingIndicator: React.FC = () => {\n    return (\n        <div className=\"chat__typing-indicator\">\n            <div className=\"chat__typing-indicator__content\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n            </div>\n        </div>\n    );\n}\nexport default TypingIndicator;\n\n","import React, { useEffect, useState } from 'react';\nimport Bubble, { Position } from '../bubble/Bubble';\nimport { Message, User } from '../chat/Chat';\nimport moment from 'moment';\nimport Timestamp from '../timestamp/Timestamp';\nimport Avatar from '../avatar/Avatar';\nimport TypingIndicator from '../typing_indicator/TypingIndicator';\n\ninterface Props {\n    messages: Message[];\n    user: User;\n    isTyping?: boolean;\n    leftBubbleStyle?: object;\n    rightBubbleStyle?: object;\n    backgroundColor?: string;\n    timestampStyle?: object;\n}\n\nconst Body: React.FC<Props> = ({ messages, user, isTyping, leftBubbleStyle, rightBubbleStyle, backgroundColor, timestampStyle }) => {\n    const el = React.useRef() as React.MutableRefObject<HTMLDivElement>;\n    const [typingUserAvatar, setTypingUserAvatar] = useState<string | undefined>();\n\n    useEffect(() => {\n        setTypingUserAvatar(messages.find(message => message.user.id !== user.id)?.user.avatar);\n    }, [messages, user]);\n\n    const setStylesForBubbles = (messages: Message[], i: number, position: Position) => {\n        const currentMessage = messages[i];\n        const previousMessage = messages[i-1];\n        const nextMessage = messages[i+1];\n\n        let corner1 = '0px';\n        let corner2 = '0px';\n        let corner3 = '0px';\n        let corner4 = '0px';\n\n        let topTimestamp = previousMessage && moment(currentMessage.createdAt).diff(moment(previousMessage.createdAt), 'minutes') > 5 ? true : false;\n        const bottomTimestamp = nextMessage && moment(nextMessage.createdAt).diff(moment(currentMessage.createdAt), 'minutes') > 5 ? true : false;\n\n        if(!topTimestamp) {\n            topTimestamp = !previousMessage ? true : false;\n        }\n\n        if(topTimestamp && !previousMessage) {\n            corner1 = '15px';\n            corner2 = '15px';\n        }\n\n        if(bottomTimestamp) {\n            corner3 = '15px';\n            corner4 = '15px';\n        }\n\n        if(topTimestamp) {\n            corner1 = '15px';\n            corner2 = '15px';\n        }\n\n        if(currentMessage.user.id !== previousMessage?.user.id) {\n            corner1 = '15px';\n            corner2 = '15px';\n        }\n\n        if(!nextMessage) {\n            corner3 = '15px';\n            corner4 = '15px';\n        }\n\n        if(currentMessage.user.id !== nextMessage?.user.id) {\n            corner3 = '15px';\n            corner4 = '15px';\n        }\n\n        if(currentMessage.user.id === previousMessage?.user.id) {\n            corner2 = '15px';\n        }\n\n        if(currentMessage.user.id === nextMessage?.user.id) {\n            corner3 = '15px';\n        }\n\n        if(position === 'left') {\n            return { borderRadius: `${corner1} ${corner2} ${corner3} ${corner4}` }\n        }\n\n        return { borderRadius: `${corner2} ${corner1} ${corner4} ${corner3}` }\n    }\n\n    return (\n        <div className=\"chat-body\" style={{ background: backgroundColor }}>\n            {messages.map((message, i) => {\n                const previousMessage = messages[i-1];\n                const nextMessage = messages[i+1];\n\n                let position: Position = 'left';\n                let style;\n\n                /* set style curves for bubbles */\n                if(message.user.id === user.id) {\n                    position = 'right';\n\n                    style = setStylesForBubbles(messages, i, 'right');\n                } else {\n                    style = setStylesForBubbles(messages, i, 'left');\n                }\n\n                /* check if timestamp is needed */\n                let isTimeStamp = true;\n                if(previousMessage) {\n                    const diff = moment(message.createdAt).diff(moment(previousMessage.createdAt), 'minutes');\n                    if(diff < 5) {\n                        isTimeStamp = false;\n                    }\n                }\n\n                /* check if render avatar */\n                let isAvatarVisible = false;\n                if(position === 'left' &&\n                    ((\n                        nextMessage && message.user.id !== nextMessage.user.id\n                    ) || (\n                        nextMessage &&\n                        moment(nextMessage.createdAt).diff(moment(message.createdAt), 'minutes') > 5\n                    ) || (\n                        !nextMessage\n                    ))\n                    && message.user.avatar\n                ) {\n                    isAvatarVisible = true;\n                }\n\n                return (\n                    <div key={i} style={nextMessage ? (message.user.id !== nextMessage.user.id ? { marginBottom: '8px' } : {}) : { marginBottom: '8px' }}>\n                        {isTimeStamp && message.createdAt ? <Timestamp date={message.createdAt} style={timestampStyle} /> : null}\n\n                        <div className=\"chat-body__message\">\n                            {message.user.avatar && isAvatarVisible && <Avatar source={message.user.avatar} />}\n                            {message.user.avatar && !isAvatarVisible && <div style={{ marginLeft: '30px' }} />}\n                            <Bubble message={message} position={position} style={{...style, ...position === 'left' ? leftBubbleStyle : rightBubbleStyle }} />\n                        </div>\n                    </div>\n                );\n            })}\n\n            {isTyping &&\n            <div className=\"chat-body__typing-indicator\">\n                {typingUserAvatar !== undefined && <Avatar source={typingUserAvatar} />}\n                <TypingIndicator />\n            </div>}\n\n            <div ref={el}></div>\n        </div>\n    );\n}\nexport default Body;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Message, User } from '../chat/Chat';\nimport moment from 'moment';\n\nconst defaultSendIcon = 'data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAA3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAALdSURBVFiFxZfNa1RXGMZ/7z3nznXuTALdiCkIlsYIIVHB7tyoBNy5KNo/oLiwCKLiJsQYxCRFdFEIGT+yCVZ3Im1XbmytWEtppUYiKDOGIAQRJcYkJpOZe+/bRTJjk5I6n8mzu4f3Oc+Pw/l4r6gq6ylnXdMBC9D/nL2RckSEUCL+FmG4s5nXawEg59J6QODHFeMLwE0HBjub+b2uAL1pfQK0/k/NIxVSoc+Nnibmag7Ql9YJhU9LqH0nwnAUcOn0Np7VDKA3rX8CX5ThUYQ7QKrlc346BGE1AA7Cz2V6BKUD5VY6w3h/mu6z42yqFED60rpf4XalEywpD9xCSXVt5V5ZABdGNLHg8xZwq4QoaFQhFeb4vqeV2Y8CqCq9Ge4L7K4RQEEzAtdCuNTdzJPVihZvwvL3QSlqUDjqwGhvhrv9Gb66+vC/q1xYgT0Cv9QBYkUaL1GGiLja1cJEEWAggzcNU8CGukMsKlDlfLiVM1J4Dfsy3AH2rREAAArf2sJHR3Iu/5mXL8kYKtyd9RnLVXdwBA4WAabfz+wam86WZhSYCbI8mjFVAcQcs6UIcP2dZ+aC6iYsV3Fj/rIAx/6YbJyX6JO1ChagMRb7bfPOxj0WIIh7X2t2vu7B1nGipHXvu8acTLX7D2GpI8qH0Zf1DPatnYpbO9yUT3b17FzeU1iAhSjcUetQR0ST1o661um+3N6wsuP6APDNg9mNWRs01irYMybrW/cH38jx79oSrz5WbyXpHNbSTt+qEiDhui/ijrmY2pEcKMdrcxoeqDTYFSdMWPdX13VOpNoSjyuZwy4EQVu5Jt/YyXjMHWoyiTM9reQqCS4ChKolPUCOiDZYO+IZ2zm4PVFtB/UBQEQCYNUr0DNmPmHtTeKcvNLS8KZWwUWApOtenAzDrn8PLm2qcd+6/YPt/lCtQ5dlqSpHR9+fmsuFJ1SiyBMzEjPeqYH22NN6Bi8DWE+t+9/xP1kh8hlyxqRXAAAAAElFTkSuQmCC';\n\ninterface Props {\n    onSend?: (message: Message) => void;\n    user: User;\n    onInputTextChanged?: (value: string) => void;\n    inputToolbarStyle?: object;\n    inputStyle?: object;\n    sendIcon?: string;\n}\n\nconst Input: React.FC<Props> = ({ user, onSend, onInputTextChanged, inputToolbarStyle, inputStyle, sendIcon }) => {\n    const [value, setValue] = useState<string>('');\n    const [message, setMessage] = useState<Message>();\n    const el = useRef() as React.MutableRefObject<HTMLInputElement>;\n\n    useEffect(() => {\n        onInputTextChanged && onInputTextChanged(value);\n        setMessage({\n            text: value,\n            createdAt: moment().format('YYYY-MM-DD HH:mm:ss'),\n            user: user\n        });\n    }, [value, onInputTextChanged]);\n    \n    const send = () => {\n        if(message && onSend) {\n            onSend(message);\n        }\n        setValue('');\n        el.current.focus();\n    }\n\n    const handleKeyDown = (e: any) => {\n        if (e.key === 'Enter') {\n            send();\n        }\n    }\n\n    return (\n        <div className=\"chat-input\" style={inputToolbarStyle}>\n            <input\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                onKeyDown={handleKeyDown}\n                ref={el}\n                style={inputStyle}\n            />\n            {value.length > 0 && <img src={sendIcon ? sendIcon : defaultSendIcon} alt=\"send\" onClick={send} />}\n        </div>\n    );\n}\nexport default Input;","import React from 'react';\n\nconst defaultChatIcon = 'data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAABuwAAAbsBOuzj4gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAaUSURBVHic5ZtbbFzVFYa/tec4tuMxjhRsRy2JHZsSIkRADQUqtUhAKThclHIxREQQEzuJbVpUEIKqD+AHpLR9AAniOMThIgVxCUJpsWNkCQK8kCCCAAlxS2xoUgvil0Qej8fxzF48zMTy4EvmzOwzntDvKefo7LX/tTLn7LX2XhZV5f8ZM98C5hvPlaGrO/COVo5cbkWuEZF6VSrBVoGpBK1KPiXHwQ6DOS7CsKoeMarvLB0u/3D/Y8RdafGD5PIK1G2L1YgkblXhWtCrgPIsTY2AvC/K26qhNwbaS77LWpRPsgrA8s7RSxF9WKARh7+iFHGF11D512Bb2SeObU/DVwDqtkWuwvB34I/BSUqjH8sTA+3h94OaIKMALH2S0qKSyD+A+wEJSswsKPDMRCz8yNG/Muba+BkDULst+mtj7G5gpevJffKFtWb9t+0LP3ZpdM5lsL4r0mqMPcD8Ow+w0hh7oL4r0urS6Ky/gPquSKsqnS4nc4UIbUe2hLc7sTVTAOq7Ru5TlW7y/75niopo85Et5c/lamhaAJZ3Re4S5SUKP0u0Ktw9uCX8Si5G0gJwfufYUiuJz8k+ock3I0ZDFx1uKz2arYG0/2UrtpOzx3mA8pTmrJkMQF1XpBH0ptw15Ru9Kak9O0RV+dXTFCdCke8Qql1KyxvKD6FEuOabPzPud6gBSIQiN5+1zgMI1YlQ5OZshiZfAZF7nQqaD7L0QZbvjFQzocfIsKpbvcTw6BUeqyqDTRE+G1a2Hoxz6Hub6ZA4RXLeQHPZD37mMUzo7fgoafPhPMCqSuHRK3xV2l7KF18YCiPPd4VvXwxIjZ8BWw/G+Ww4+I3U06+AP/z5AuAhWoMPfw59b7nj36f8zpMfRH0HwKAsC0LLvJCFL4bCL3qypv1dws19sfvmesYAQ3nSEzzCf6dejo9GakW1e64geAJDCisyncNVHpDFOn9mVNK2042YWgVJBYHuhpJp+wdG0WN+5nCVB2SxzmeApgXAitSm/imi2t3SNzYtTzAC+x2rmE++mHohltqpl0BXy39G02oeIyK9QMa/Q1d5QHbr/JzEKZLX0+6Irkq7VhZTZLanP6JK3fbIB8CVLtXkH+kZaC2brAhb+yNV8Xjof8yQ5ouy7tkbS1+B1BKo8GLedAaFapoPiXhoHbPUOCo8tfkQRZAKwOJQeBfIYOAigyK5IfJm+i3WzzGiOnE8eiOkAvDRJiZQHg9OYcAY/jJ1N2hzz6kLgcvmHiRNyaEpBofLdgOBn8a6R3oGtoRfm3rHGvvQGUcpa1r7I1WTAdDHsEbtHcDJAFQGxYhR0zb1Rktv7PegGzMY68UT5ra0OuBw2zmHFd3gUmGAWBU2TT0TaNzDAsTuIMMTLVVZMa0QGmwt3wu86k5nIKiItvz0VKiiLPY3kIw3RQRqpx2N1XVGbkd4GfedH86Y6XB0Y8/oJcaYg0Bxxnbg07QAnAXOT4jwwDTn3xpfYax9D/xu7cvJSUfPAudnbJDY3Ddeb9S+jW/nAdQYKHjnFXh6IhZePc35ntgym3T+l1naHvLqd0TXFLDzszZJbd43erE1Zi/gex/wNAJDnlr7FIXl/JxtcgLS3Dv2AGK24uODNwvHPPCzJxwYaY2Sg7M0SjbtG13SLKEXEK53Maki+z3QZlSeRbjQhdE5iGbbKtu4h1DFwtg6T8yTqJ7rSI/1vHhvTq2yQdO4hwWLwtF7VeURoN6x+QM715T+tpDe/Una3yU8ER3bVBHmIVX5RRBzCMn9g4IIQEcHZmh19NJESP4gqteB/A4oCfDrNCjVC3dBHgNwTz9lxeOxKjytRrVahCrUVCO6Si/nGlQWi0JeOvNEHt+xmgnIIQCNewhVlEX7QK7L5PligBCpNUdIfnp0PtagT877sGQ3DcmLnD6CTXtPLPIWFB8ELnCjLWjkpIbksu7riw+fvpPTueDzaxedsMbcApzIWVseULEbpjoPDg5Gd91Q/JUVcyeQyNVWwLza3bBw709vOjkZ3tVQ3A886MJWgNw209GY00SouS+6VlR2Aq6yNdfEEdbtbCidPEFyngk27Rtd4hF6HvQGp4bdkRaEwFLh5r6x+0X5J1AayAS5MRmEQGuBlt5TK5HEM8DVFN7fHsRVdW1eiqGNveN1hsSGVDdnIfUkHclrNdjRgTn2m/FrwTYBfwJK8jb5zHw9b+Xw+j7OKdOxlQo1VllmoEaFGqAm2e+nFQFL+BKVTQW9H5APfrYtcpnyI9hplrO9B3HZAAAAAElFTkSuQmCC';\n\ninterface Props {\n    onClick: () => void;\n    icon?: string;\n    style?: object;\n}\n\nconst Widget: React.FC<Props> = ({ onClick, icon, style }) => {\n    return (\n        <img src={icon ? icon : defaultChatIcon} alt=\"chat\" className=\"chat-widget\" onClick={onClick} style={style} />\n    );\n}\nexport default Widget;","import React, { useState } from 'react';\nimport Header from '../header/Header';\nimport Body from '../body/Body';\nimport Input from '../input/Input';\nimport Widget from '../widget/Widget';\n\nexport interface User {\n    id: number | string;\n    name?: string;\n    avatar?: string;\n}\n\nexport interface Message {\n    id?: number | string;\n    text: string;\n    createdAt?: string;\n    user: User;\n}\n\ninterface Props {\n    title?: string;\n    minimized?: boolean;\n    messages: Message[];\n    user: User;\n    onSend?: (message: Message) => void;\n    isTyping?: boolean;\n    onInputTextChanged?: (value: string) => void;\n    headerAvatar?: string;\n    headerStyle?: object;\n    titleColor?: string;\n    minimizeIcon?: string;\n    leftBubbleStyle?: object;\n    rightBubbleStyle?: object;\n    backgroundColor?: string;\n    timestampStyle?: object;\n    inputToolbarStyle?: object;\n    inputStyle?: object;\n    sendIcon?: string;\n    chatIcon?: string;\n    containerStyle?: object;\n    widgetStyle?: object;\n}\n\nconst Chat: React.FC<Props> = ({\n    title,\n    minimized,\n    messages,\n    user,\n    onSend,\n    isTyping,\n    onInputTextChanged,\n    headerAvatar,\n    headerStyle,\n    titleColor,\n    minimizeIcon,\n    leftBubbleStyle,\n    rightBubbleStyle,\n    backgroundColor,\n    timestampStyle,\n    inputToolbarStyle,\n    inputStyle,\n    sendIcon,\n    chatIcon,\n    containerStyle,\n    widgetStyle\n}) => {\n    const [isMinimized, setIsMinimized] = useState(minimized);\n\n    return (\n        <>\n        {isMinimized ? <Widget\n            onClick={() => setIsMinimized(false)}\n            icon={chatIcon}\n            style={widgetStyle}\n        /> :\n        <div className=\"chat-container\" style={containerStyle}>\n            <Header\n                title={title}\n                minimize={() => setIsMinimized(true)}\n                headerAvatar={headerAvatar}\n                headerStyle={headerStyle}\n                titleColor={titleColor}\n                minimizeIcon={minimizeIcon}\n            />\n            <Body\n                user={user}\n                messages={messages}\n                isTyping={isTyping}\n                leftBubbleStyle={leftBubbleStyle}\n                rightBubbleStyle={rightBubbleStyle}\n                backgroundColor={backgroundColor}\n                timestampStyle={timestampStyle}\n            />\n            <Input\n                user={user}\n                onSend={onSend}\n                onInputTextChanged={onInputTextChanged}\n                inputToolbarStyle={inputToolbarStyle}\n                inputStyle={inputStyle}\n                sendIcon={sendIcon}\n            />\n        </div>}\n        </>\n    );\n}\nexport default Chat;"],"names":["Header","title","minimize","headerAvatar","titleColor","minimizeIcon","React","className","style","headerStyle","src","alt","color","onClick","Bubble","position","message","text","Timestamp","Moment","format","moment","date","Avatar","source","TypingIndicator","Body","messages","user","isTyping","leftBubbleStyle","rightBubbleStyle","backgroundColor","timestampStyle","el","useRef","useState","typingUserAvatar","setTypingUserAvatar","useEffect","find","id","_messages$find","avatar","setStylesForBubbles","i","currentMessage","previousMessage","nextMessage","corner1","corner2","corner3","corner4","topTimestamp","createdAt","diff","borderRadius","background","map","isTimeStamp","isAvatarVisible","key","marginBottom","marginLeft","undefined","ref","Input","onSend","onInputTextChanged","inputToolbarStyle","inputStyle","sendIcon","value","setValue","setMessage","send","current","focus","type","placeholder","onChange","e","target","onKeyDown","length","Widget","icon","chatIcon","containerStyle","widgetStyle","minimized","setIsMinimized"],"mappings":"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"}